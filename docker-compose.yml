version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gamification-postgres
    environment:
      POSTGRES_DB: gamification
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gamification-network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gamification-backend
    environment:
      NODE_ENV: development
      PORT: 8000
      DATABASE_URL: postgresql://root:root@postgres:5432/gamification
      JWT_SECRET: gamification-secret-key-2024
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - gamification-network
    restart: unless-stopped
    command: npm run dev

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gamification-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_WS_URL: ws://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - gamification-network
    restart: unless-stopped
    command: npm run dev

  # Redis for caching and sessions (optional)
  redis:
    image: redis:7-alpine
    container_name: gamification-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gamification-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  gamification-network:
    driver: bridge 